#import "azer/effect/afx/baselight.afxi"

struct VsOutput {
  vec4 __afx_position;
  vec2 texcoord0;
  vec2 texcoord1;
  vec4 normal;
  vec4 worldpos;
  vec4 projpos;
};

uniform mat4 wvp;
uniform mat4 world;
uniform mat4 projtex_wvp;
uniform sampler2D MyTex;
uniform sampler2D ProjTex;
uniform PointLight ptlight;

VsOutput vs_main(vec3 position, vec2 texcoord0, vec2 texcoord1, vec3 normal) {
  VsOutput o;
  o.__afx_position = vec4(position, 1) * wvp;
  o.texcoord0 = texcoord0;
  o.texcoord1 = texcoord1;
  o.normal = normalize(vec4(normal, 0) * world);
  o.worldpos =  vec4(position, 1) * world;
  o.projpos = vec4(position, 1) *  projtex_wvp;
  return o;
}

/*
 * -1 围在 depthtex 给定的光照影响范围内
 * 0  不再影子中
 * 1 在影子中
 */

vec4 ps_main(VsOutput o) {
  vec4 color = texture2D(MyTex, o.texcoord0);
  float bias = 0.001;

  vec2 projpos;
  
  projpos.x = o.projpos.x / 2.0 - 0.5;
  projpos.y = o.projpos.y / -2.0 - 0.5;
  projpos /= o.projpos.w;
  
  if (clamp(projpos.xy, 0, 1) == projpos.xy) {
    float depth_value = texture2D(ProjTex, projpos).r;
    float light_depth = o.projpos.z - bias;
    if (light_depth < depth_value) {
      vec4 ref = normalize(o.worldpos - ptlight.position);
      float intensity = clamp(dot(o.normal, ref), 0, 1);
      if (intensity > 0) {
        return intensity * color;
      }
    }
  }

  return color;
}


#import "azer/effect/afx/baselight.afxi"

uniform mat4 wvp;
uniform mat4 world;
uniform sampler2D DiffuseTex;
uniform sampler2D BumpMapTex;
uniform DirectionalLight dirlight;

struct VsOutput {
  vec4 __afx_position;
  vec2 texcoord;
  vec4 normal;
  vec4 tangent;
  vec4 binormal;
};

VsOutput vs_main(vec3 position, vec2 texcoord, vec3 normal,
	 	 vec3 tangent, vec3 binormal) {
  VsOutput o;
  o.__afx_position = vec4(position, 1) * wvp;
  o.texcoord = texcoord;
  o.normal = normalize(vec4(normal, 0) * world);
  o.tangent = normalize(vec4(normal, 0) * world);
  o.binormal = normalize(vec4(normal, 0) * world);
  return o;
}

vec4 TBNNormal(vec4 tangent, vec4 binormal, vec4 normal, vec4 n) {
  n = n * 2 - 1;
  return n.x * tangent + n.y * binormal + n.z * normal;
}

vec4 ps_main(VsOutput o) {
  vec4 diffuse =  texture2D(DiffuseTex, o.texcoord);
  vec4 normal = texture2D(BumpMapTex, o.texcoord);
  normal = TBNNormal(o.tangent, o.binormal, o.normal, normal);
  return CalcDirectionalLight(dirlight, normal) * diffuse;
}


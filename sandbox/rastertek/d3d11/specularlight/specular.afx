#import "azer/effect/afx/baselight.afxi"

struct VsOutput {
  vec4 __afx_position;
  vec2 texcoord;
  vec4 normal;
  vec4 viewdir;
};

uniform mat4 wvp;
uniform mat4 world;
uniform vec4 camera_pos;
uniform DirectionalLight dirlight;
uniform vec4 diffuse;
uniform float specular_power;

VsOutput vs_main(vec3 position, vec2 texcoord, vec3 normal) {
  VsOutput o;
  o.__afx_position = vec4(position, 1) * wvp;
  o.texcoord = texcoord;
  vec4 world_pos = vec4(position, 1) * world;
  o.normal = normalize(vec4(normal, 0) * world);
  o.viewdir = normalize(camera_pos - world_pos);
  return o;
}

vec4 ps_main(VsOutput o) {
  float specular = 0.0;
  vec4 color = CalcDirectionalLight(dirlight, o.normal) * diffuse;
  vec4 lightdir = dirlight.directional;
  float light_intensity = dot(-lightdir, o.normal);
  if (light_intensity > 0.0) {
    vec4 reflect = normalize(2 * light_intensity * o.normal + lightdir);
    if (dot(reflect, o.viewdir) > 0) {
      specular = pow(dot(reflect, o.viewdir), specular_power);
      color += specular;
    }
  }
  return color;
}

